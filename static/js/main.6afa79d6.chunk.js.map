{"version":3,"sources":["Components/Filter/Filter.module.css","Components/ContactsForm/ContactsForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","index.js","Components/ContactsForm/ContactsForm.module.css","Components/ContactList/ContactList.module.css"],"names":["module","exports","ContactsForm","state","name","number","nameId","uuidv4","numberId","handleInputChange","e","target","value","setState","handleSubmit","preventDefault","props","onAddContact","this","onSubmit","className","s","TaskEditor","id","TaskEditor_label","TaskEditor_input","type","pattern","title","required","onChange","TaskEditor_button","Component","ContactList","contacts","onDeleteContact","TaskList","map","contact","TaskList_item","TaskList_button","onClick","Filter","onChangeFilter","App","filter","addContact","event","searchSameName","includes","alert","length","deleteContact","contactId","prevState","changeFilter","getVisibleContacts","toLowerCase","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6afa79d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskEditor_input\":\"Filter_TaskEditor_input__1ftHN\"};","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './ContactsForm.module.css';\n\nclass ContactsForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameId = uuidv4();\n  numberId = uuidv4();\n\n  handleInputChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onAddContact({ ...this.state });\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { handleSubmit, nameId, handleInputChange, numberId } = this;\n    const { name, number} = this.state;\n\n    return (\n      <form onSubmit={handleSubmit} className={s.TaskEditor}>\n        <label id={nameId} className={s.TaskEditor_label}>\n          <input\n            className={s.TaskEditor_input}\n            id={nameId}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            onChange={handleInputChange}\n          />\n        </label>\n        <label id={numberId} className={s.TaskEditor_label}>\n          <input\n            className={s.TaskEditor_input}\n            id={numberId}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={number}\n            onChange={handleInputChange}\n          />\n        </label>\n        <button className={s.TaskEditor_button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactsForm.propTypes = {\n  onAddContact: PropTypes.func,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\nexport default ContactsForm;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport s from './ContactList.module.css';\n\nclass ContactList extends Component {\n  render() {\n    const { contacts, onDeleteContact} = this.props;\n    return (\n      <ul className={s.TaskList}>\n        {contacts.map(contact => (\n          <li key={contact.id} className={s.TaskList_item}>\n            {contact.name} : {contact.number}\n            <button\n              className={s.TaskList_button}\n              onClick={() => onDeleteContact(contact.id)}\n            >\n              Удалить\n            </button>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nContactList.propTypes = {\n  onDeleteContact: PropTypes.func,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport s from './Filter.module.css';\n\nclass Filter extends Component {\n  render() {\n    const { value, onChangeFilter} = this.props;\n    return (\n      <div>\n        <h3>Find contacts by name</h3>\n        <input\n          className={s.TaskEditor_input}\n          type=\"text\"\n          value={value}\n          onChange={e => onChangeFilter(e.target.value)}\n        />\n      </div>\n    );\n  }\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onchangeFilter: PropTypes.func,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactsForm from './Components/ContactsForm/ContactsForm';\nimport ContactList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n  \n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n    }\n  }\n\n  addContact = event => {\n    const searchSameName = this.state.contacts\n      .map(contact => contact.name)\n      .includes(event.name);\n\n    if (searchSameName) {\n      alert(`${event.name} is already in contacts`);\n    } else if (event.name.length === 0) {\n      alert('Fields must be filled!');\n    } else {\n      const contact = {\n        ...event,\n        id: uuidv4(),\n      };\n\n      this.setState(({ contacts }) => ({\n        contacts: [...contacts, contact],\n      }));\n    }\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = filter => {\n    this.setState({ filter });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(contacts =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactsForm onAddContact={this.addContact} />\n\n        <h2>Contacts</h2>\n\n        {visibleContacts.length >= 1 && (\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n        )}\n\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskEditor\":\"ContactsForm_TaskEditor__WQV57\",\"TaskEditor_label\":\"ContactsForm_TaskEditor_label__1WWD_\",\"TaskEditor_input\":\"ContactsForm_TaskEditor_input__1egPS\",\"TaskEditorinput\":\"ContactsForm_TaskEditorinput__3bZDO\",\"TaskEditor_button\":\"ContactsForm_TaskEditor_button__2IkMM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskList\":\"ContactList_TaskList__3XPhw\",\"TaskList_item\":\"ContactList_TaskList_item__FRQiv\",\"TaskList_button\":\"ContactList_TaskList_button__3ceiS\"};"],"sourceRoot":""}